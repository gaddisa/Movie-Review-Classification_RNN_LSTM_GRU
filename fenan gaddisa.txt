<?php

namespace App\Livewire\Rentagreement;

use Carbon\Carbon;
use App\Models\User;
use App\Models\EmployeeInfo;
use App\Models\RentAgreement;
use Livewire\WithFileUploads;
use Modules\Room\Models\Room;
use App\Notifications\NotifyCeo;
use Illuminate\Support\Facades\DB;
use Modules\Room\Models\RoomPrice;
use Illuminate\Support\Facades\Gate;
use LivewireUI\Modal\ModalComponent;

class RentAgreementModal extends ModalComponent
{
    use WithFileUploads;

    public $agreementId;
    public $isEdit = false;

    public $tenant_id = '';
    public $room_id = '';
    public $start_date = '';
    public $end_date = '';
    public $purpose = '';
    public $rent_amount = '';
    public $agreement_file;
    public $existing_file;
    public $agreement;
    public $show_end_date = false; // Control visibility


    protected $rules = [
        'tenant_id' => 'required|exists:employee_infos,id',
        'room_id' => 'required|exists:rooms,id',
        'start_date' => 'required|date',
        'end_date' => 'required|date|after:start_date',
        'purpose' => 'nullable|string|max:500',
        'rent_amount' => 'required|numeric|min:0',
        'agreement_file' => 'nullable|file|mimes:pdf|max:8200',
    ];

    protected function authorizeAction(string $action): bool
    {
        $permission = match ($action) {
            'create' => 'add_rentagreements',
            'update' => 'edit_rentagreements',
            default => 'view_rentagreements'
        };

        if (!auth()->user()->can($permission)) {
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'You are not authorized to perform this action',
                'position' => 'top-end',
                'duration' => 5000
            ]);
            return false;
        }

        return true;
    }
    public function mount($agreementId = null)
    {
        $action = $agreementId ? 'update' : 'create';
        if (!$this->authorizeAction($action)) {
            $this->skipRender();
            return;
        }

        if ($agreementId) {
            $this->agreementId = $agreementId;
            $this->isEdit = true;
            $this->loadAgreement();
        } else {
            $this->start_date = now()->format('Y-m-d');
            $this->end_date = now()->addYears(5)->format('Y-m-d'); // Fixed: changed addYear(5) to addYears(5)
            $this->show_end_date = false; // Hide end date during creation
        }
    }
    public function updatedStartDate($value)
    {
        if (!$this->isEdit && !empty($value)) {
            try {
                $this->end_date = Carbon::parse($value)->addYears(5)->format('Y-m-d');
            } catch (\Exception $e) {
                $this->dispatch('showToast', [
                    'type' => 'error',
                    'message' => 'Invalid Date.'
                ]);
            }
        }
    }

    public function loadAgreement()
    {
        $this->agreement = RentAgreement::find($this->agreementId);

        if ($this->agreement) {
            $this->tenant_id = $this->agreement->tenant_id;
            $this->room_id = $this->agreement->room_id;
            $this->start_date = $this->agreement->start_date->format('Y-m-d');
            $this->end_date = $this->agreement->end_date->format('Y-m-d');
            $this->purpose = $this->agreement->purpose;
            $this->rent_amount = $this->agreement->rent_amount;
        }
    }

    public function updatedRoomId($value)
    {
        if ($value) {
            $roomPrice = RoomPrice::where('room_id', $value)
                ->whereNull('effective_to')
                ->latest()
                ->first();

            if ($roomPrice) {
                $this->rent_amount = $roomPrice->total_price;
            }
        }
    }

    public function save()
    {
        $action = $this->isEdit ? 'update' : 'create';
        if (!$this->authorizeAction($action)) {
            return;
        }

        $this->validate();

        // Check room availability
        if (!RentAgreement::isRoomAvailable(
            $this->room_id,
            $this->start_date,
            $this->end_date,
            $this->isEdit ? $this->agreementId : null
        )) {
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'The room is already occupied during the selected period'
            ]);
            return;
        }

        // Get current room price
        $roomPrice = RoomPrice::where('room_id', $this->room_id)
            ->whereNull('effective_to')
            ->latest()
            ->first();

        if (!$roomPrice) {
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'No active price found for this room'
            ]);
            return;
        }

        DB::beginTransaction();

        try {
            $data = [
                'tenant_id' => $this->tenant_id,
                'room_id' => $this->room_id,
                'start_date' => $this->start_date,
                'end_date' => $this->end_date,
                'purpose' => $this->purpose,
                'rent_amount' => $roomPrice->total_price,
            ];

            if ($this->isEdit) {
                $agreement = RentAgreement::find($this->agreementId);
                $agreement->update($data);

                // Handle file upload for edit
                if ($this->agreement_file) {
                    $agreement->clearMediaCollection('agreement_files');
                    $agreement->addMedia($this->agreement_file->getRealPath())
                        ->usingName($this->agreement_file->getClientOriginalName())
                        ->toMediaCollection('agreement_files');
                }
                $this->notifyCeo('updated', $agreement);


                $message = 'Rent agreement updated successfully!';
            } else {
                $agreement = RentAgreement::create($data);

                // Handle file upload for create
                if ($this->agreement_file) {
                    $agreement->addMedia($this->agreement_file->getRealPath())
                        ->usingName($this->agreement_file->getClientOriginalName())
                        ->toMediaCollection('agreement_files');
                }
                $this->notifyCeo('created', $agreement);

                $message = 'Rent agreement created successfully!';
            }

            DB::commit();

            $this->dispatch('refresh-rent-agreements');
            $this->closeModal();
            $this->dispatch('showToast', [
                'type' => 'success',
                'message' => $message
            ]);
        } catch (\Exception $e) {
            DB::rollBack();
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'Failed to save rent agreement: ' . $e->getMessage()
            ]);
        }
    }

    public function render()
    {
        $tenants = EmployeeInfo::orderBy('first_name')->get();
        $rooms = Room::orderBy('name')->get();

        return view('livewire.rentagreement.rent-agreement-modal', [
            'tenants' => $tenants,
            'rooms' => $rooms
        ]);
    }

    public static function modalMaxWidth(): string
    {
        return '4xl';
    }



    protected function notifyCeo($action, RentAgreement $agreement)
    {
        $ceoUsers = User::role(['ceo', 'super admin'])->get();

        $data = [
            'tenant_name' => $agreement->tenant->full_name,
            'room_name' => $agreement->room->name,
            'rent_amount' => $agreement->rent_amount,
        ];

        foreach ($ceoUsers as $ceo) {
            $ceo->notify(new NotifyCeo(
                $action,
                'Rent Agreement',
                $data
            ));
        }
    }
}




<div class="p-6 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-lg shadow-lg border border-gray-200">
    <div class="flex justify-between items-center pb-4 border-b border-gray-200 mb-4">
        <h2 class="text-2xl font-bold text-gray-800 flex items-center">
            <i class="fas fa-file-contract mr-2 text-blue-600"></i>
            @if ($isEdit)
                @lang('Edit Rental Agreement')
            @else
                @lang('Create New Rental Agreement')
            @endif
        </h2>
        <button wire:click="$dispatch('closeModal')"
            class="text-gray-500 hover:text-red-600 transition-colors duration-200 transform hover:scale-110">
            <i class="fas fa-times-circle text-xl"></i>
        </button>
    </div>

    <form wire:submit.prevent="save" class="space-y-5">
        <!-- Tenant and Room Selection -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <!-- Tenant Selection -->
            <div class="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                    <i class="fas fa-user-tie mr-2 text-blue-500"></i> @lang('Tenant Information')
                </h3>
                <div class="relative">
                    <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400">
                        <i class="fas fa-search"></i>
                    </span>
                    <select wire:model="tenant_id"
                        class="w-full border border-gray-300 rounded-lg pl-10 pr-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none bg-white transition">
                        <option value="">@lang('Select Tenant')</option>
                        @foreach ($tenants as $tenant)
                            <option value="{{ $tenant->id }}">{{ $tenant->full_name }} ({{ $tenant->employee_id }})
                            </option>
                        @endforeach
                    </select>
                </div>
                @error('tenant_id')
                    <span class="text-sm text-red-500 flex items-center mt-1">
                        <i class="fas fa-exclamation-circle mr-1"></i> {{ $message }}
                    </span>
                @enderror
            </div>

            <!-- Room Selection -->
            <div class="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                    <i class="fas fa-door-open mr-2 text-blue-500"></i> @lang('Room Information')
                </h3>
                <div class="relative">
                    <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400">
                        <i class="fas fa-search"></i>
                    </span>
                    <select wire:model="room_id"
                        class="w-full border border-gray-300 rounded-lg pl-10 pr-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none bg-white transition">
                        <option value="">@lang('Select Room')</option>
                        @foreach ($rooms as $room)
                            <option value="{{ $room->id }}">{{ $room->name }} ({{ $room->site->name ?? 'N/A' }})
                            </option>
                        @endforeach
                    </select>
                </div>
                @error('room_id')
                    <span class="text-sm text-red-500 flex items-center mt-1">
                        <i class="fas fa-exclamation-circle mr-1"></i> {{ $message }}
                    </span>
                @enderror
            </div>
        </div>

        <!-- Dates and Price -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <!-- Start Date -->
            <div class="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                    <i class="fas fa-calendar-day mr-2 text-blue-500"></i> @lang('Start Date')
                </h3>
                <div class="relative">
                    <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400">
                        <i class="fas fa-calendar"></i>
                    </span>
                    <input type="date" wire:model="start_date"
                        class="w-full border border-gray-300 rounded-lg pl-10 pr-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                </div>
                @error('start_date')
                    <span class="text-sm text-red-500 flex items-center mt-1">
                        <i class="fas fa-exclamation-circle mr-1"></i> {{ $message }}
                    </span>
                @enderror
            </div>

            <!-- End Date -->

            @if ($isEdit)
                <div class="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                    <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                        <i class="fas fa-calendar-times mr-2 text-blue-500"></i> @lang('End Date')
                    </h3>
                    <div class="relative">
                        <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400">
                            <i class="fas fa-calendar"></i>
                        </span>
                        <input type="date" wire:model="end_date" min="{{ now()->format('Y-m-d') }}"
                            class="w-full border border-gray-300 rounded-lg pl-10 pr-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                    </div>
                    @error('end_date')
                        <span class="text-sm text-red-500 flex items-center mt-1">
                            <i class="fas fa-exclamation-circle mr-1"></i> {{ $message }}
                        </span>
                    @enderror
                </div>
            @else
                <input type="hidden" wire:model="end_date"> <!-- Hidden but still submitted -->
            @endif



            <!-- Room Price Display -->
            <div class="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                    <i class="fas fa-money-bill-wave mr-2 text-blue-500"></i> @lang('Monthly Rent')
                </h3>
                <div class="relative">
                    <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400">
                        <i class="fas fa-dollar-sign"></i>
                    </span>
                    <input type="text" wire:model="rent_amount" readonly
                        class="w-full border border-gray-300 rounded-lg pl-10 pr-3 py-2 bg-gray-100 font-mono focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                </div>
                <div class="text-xs text-gray-500 mt-1">
                    @lang('Current room price (automatically set)')
                </div>
            </div>
        </div>

        <!-- Purpose -->
        <div class="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
            <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                <i class="fas fa-info-circle mr-2 text-blue-500"></i> @lang('Intended Use')
            </h3>
            <div class="mb-2 text-sm text-gray-600">
                @lang('Please describe how the room will be used (e.g., office, storage, meeting room)')
            </div>
            <textarea wire:model="purpose" rows="3"
                class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition"
                placeholder="@lang('Example: Office space for IT department')"></textarea>
            @error('purpose')
                <span class="text-sm text-red-500 flex items-center mt-1">
                    <i class="fas fa-exclamation-circle mr-1"></i> {{ $message }}
                </span>
            @enderror
        </div>

        <!-- Agreement File -->
        <div class="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
            <h3 class="text-lg font-semibold text-gray-700 mb-4 flex items-center">
                <i class="fas fa-file-pdf mr-2 text-blue-500"></i> @lang('Agreement Document')
            </h3>
            <div class="mb-2 text-sm text-gray-600">
                @lang('Upload the signed agreement document (PDF format, max 50MB)')
            </div>

            <!-- File Upload Input -->
            <div class="relative">
                <input type="file" wire:model="agreement_file" id="agreement_file" accept="application/pdf"
                    class="absolute inset-0 w-full h-full opacity-0 cursor-pointer">
                <div
                    class="border-2 border-dashed border-gray-300 rounded-lg p-4 text-center transition hover:border-blue-500 hover:bg-blue-50">
                    <div class="flex items-center justify-center">
                        <i class="fas fa-cloud-upload-alt text-blue-500 text-2xl mr-2"></i>
                        <span class="text-gray-700">
                            @if ($agreement_file)
                                {{ $agreement_file->getClientOriginalName() }}
                            @else
                                @lang('Click to select PDF file')
                            @endif
                        </span>
                    </div>
                    @if ($agreement_file)
                        <button type="button" wire:click="$set('agreement_file', null)"
                            class="mt-2 text-red-500 hover:text-red-700 text-sm">
                            <i class="fas fa-times mr-1"></i> @lang('Remove file')
                        </button>
                    @endif
                </div>
            </div>

            @error('agreement_file')
                <span class="text-sm text-red-500 flex items-center mt-1">
                    <i class="fas fa-exclamation-circle mr-1"></i> {{ $message }}
                </span>
            @enderror

            <!-- Show existing file -->
            @if ($agreement?->hasMedia('agreement_files'))
                <div class="mt-3 bg-blue-50 p-2 rounded flex items-center">
                    <i class="fas fa-file-pdf text-red-500 mr-2"></i>
                    <span class="text-blue-800">
                        {{ $agreement->getFirstMedia('agreement_files')->name }}
                    </span>
                    <span class="ml-auto text-blue-600 hover:text-blue-800">
                        <a href="{{ route('backend.rentagreements.viewAgreement', $agreement->id) }}" target="_blank"
                            title="@lang('View current file')">
                            <i class="fas fa-eye"></i>
                        </a>
                    </span>
                </div>
                <p class="text-xs text-gray-500 mt-1">
                    @lang('Uploading a new file will replace the existing one')
                </p>
            @endif
        </div>

        <!-- Form Actions -->
        <div class="flex justify-end space-x-3 pt-4">
            <button type="button" wire:click="$dispatch('closeModal')" wire:loading.attr="disabled"
                class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition">
                @lang('Cancel')
            </button>
            <button type="submit" wire:loading.attr="disabled"
                class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
                <span wire:loading.remove>
                    @if ($isEdit)
                        @lang('Update Agreement')
                    @else
                        @lang('Create Agreement')
                    @endif
                </span>
                <span wire:loading>
                    <i class="fas fa-spinner fa-spin me-1"></i> @lang('Processing...')
                </span>
            </button>
        </div>
    </form>
</div>
