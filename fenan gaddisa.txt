<?php

namespace Modules\DeskReview\Models;

use App\Models\User;
use App\Models\Standard;
use App\Models\BaseModel;
use App\Models\Indicator;
use App\Models\DeskReviewAssignment;
use Modules\Application\Models\Application;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class DeskReview extends BaseModel
{
    use HasFactory;
    use SoftDeletes;

    protected $table = 'deskreviews';
    protected $casts = [
        'review_phase' => 'string',
        'rating_value' => 'integer',
    ];
    /**
     * Create a new factory instance for the model.
     *
     * @return \Illuminate\Database\Eloquent\Factories\Factory
     */
    protected static function newFactory()
    {
        return \Modules\DeskReview\database\factories\DeskReviewFactory::new();
    }

    public function indicator()
    {
        return $this->belongsTo(Indicator::class, 'indicator_id');
    }

    public function reviewer()
    {
        return $this->belongsTo(User::class, 'reviewer_id');
    }
    public function standard()
    {
        return $this->belongsTo(Standard::class, 'standard_id'); // Ensure correct foreign key is used
    }
    public function deskReviewAssignment()
    {
        return $this->belongsTo(DeskReviewAssignment::class, 'application_id', 'application_id');
    }
    public function deskReviewAssignmentByRound()
{
    return $this->belongsTo(DeskReviewAssignment::class, 'application_id', 'application_id');
}

}
