<?php

namespace App\Livewire\Attachement;

use Livewire\Component;
use Livewire\WithPagination;
use Modules\Attachement\Models\Attachement;
use Modules\DCT\Models\DCT;

class Attachements extends Component
{
    use WithPagination;

    public $searchTerm = '';
    public $statusFilter = '';
    public $typeFilter = '';
    public $dctFilter = '';
    public $sortField = 'name';
    public $sortDirection = 'asc';
    public $perPage = 10;

    protected $listeners = ['refreshAttachements' => '$refresh'];

    public function sortBy($field)
    {
        if ($this->sortField === $field) {
            $this->sortDirection = $this->sortDirection === 'asc' ? 'desc' : 'asc';
        } else {
            $this->sortDirection = 'asc';
        }
        $this->sortField = $field;
    }

    public function resetFilters()
    {
        $this->reset(['statusFilter', 'typeFilter', 'dctFilter', 'searchTerm']);
        $this->resetPage();
    }

    public function openAddModal()
    {
        $this->dispatch('openModal', 'attachement.attachement-modal');
    }

    public function openEditModal($attachementId)
    {
        $this->dispatch('openModal', 'attachement.attachement-modal', [
            'attachementId' => $attachementId
        ]);
    }

    public function deleteAttachement($attachementId)
    {
        $attachement = Attachement::find($attachementId);
        if ($attachement) {
            $attachement->delete();
            $this->dispatch('refreshAttachements');
            $this->dispatch('showToast', [
                'type' => 'success',
                'message' => 'Attachement deleted successfully'
            ]);
        }
    }

    public function getDctsProperty()
    {
        return DCT::orderBy('name')->get(['id', 'name']);
    }

    public function render()
{
    $attachements = Attachement::query()
        ->with('dct')
        ->when($this->searchTerm, function ($query) {
            return $query->where('name', 'like', '%' . $this->searchTerm . '%');
        })
        ->when($this->statusFilter, function ($query) {
            return $query->where('status', $this->statusFilter);
        })
        ->when($this->typeFilter, function ($query) {
            return $query->where('attachement_type', $this->typeFilter);
        })
        ->when($this->dctFilter, function ($query) {
            return $query->where('dct_id', $this->dctFilter);
        })
        // Add this condition to exclude attachments starting with "Others"
        ->where('name', 'NOT LIKE', 'Others%')
        ->orderBy($this->sortField, $this->sortDirection)
        ->paginate($this->perPage);

    return view('livewire.attachement.attachements', [
        'attachements' => $attachements,
        'statusOptions' => ['active' => 'Active', 'inactive' => 'Inactive'],
        'typeOptions' => [
            'table' => 'Table',
            'document' => 'Document',
            'image' => 'Image',
            'other' => 'Other'
        ],
        'dcts' => $this->dcts
    ]);
}
}
