<?php

namespace App\Livewire\Room;

use App\Models\User;
use Modules\Room\Models\Room;
use Modules\Site\Models\Site;
use App\Notifications\NotifyCeo;
use Illuminate\Support\Facades\DB;
use Modules\Room\Models\RoomPrice;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Gate;
use LivewireUI\Modal\ModalComponent;

class RoomModal extends ModalComponent
{
    public $siteId;
    public $roomId;
    public $isEdit = false;

    // Form fields
    public $name;
    public $description;
    public $area_square_meters;
    public $room_status = 0;
    public $status = 1;
    public $selected_site_id;
    public $price_per_sqm;

    protected function authorizeAction(string $action): bool
    {
        $permission = match ($action) {
            'create' => 'add_rooms',
            'update' => 'edit_rooms',
            default => 'view_rooms',
        };

        if (!auth()->user()->can($permission)) {
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'You are not authorized to perform this action',
                'position' => 'top-end',
                'duration' => 5000
            ]);
            return false;
        }

        return true;
    }

    public function mount($siteId = null, $roomId = null)
    {
        $action = $roomId ? 'update' : 'create';
        if (!$this->authorizeAction($action)) {
            $this->skipRender();
            return;
        }

        $this->siteId = $siteId;
        $this->selected_site_id = $siteId;

        if ($roomId) {
            $this->isEdit = true;
            $this->loadRoom($roomId);
        }
    }

    public function loadRoom($roomId)
    {

        try {
            //$room = Room::with(['currentPrice'])->findOrFail($roomId);
            //$room = Room::with('prices')->findOrFail($roomId);
            $room = Room::with('currentPriceModel')->findOrFail($roomId);

            $this->roomId = $roomId;
            $this->selected_site_id = $room->site_id;
            $this->name = $room->name;
            $this->description = $room->description;
            $this->area_square_meters = $room->area_square_meters;
            $this->room_status = $room->room_status;
            $this->status = $room->status;

            // Get the current active price
            //$currentPrice = $room->prices()->whereNull('effective_to')->latest('effective_from')->first();
            //$this->price_per_sqm = $currentPrice?->price_per_sqm ?? 0;

            $this->price_per_sqm = $room->currentPriceModel?->price_per_sqm ?? 0;
        } catch (\Illuminate\Database\Eloquent\ModelNotFoundException $e) {
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'The requested room does not exist',
                'position' => 'top-end',
                'duration' => 5000
            ]);
            $this->closeModal();
        } catch (\Exception $e) {
            Log::error('Failed to load room: ' . $e->getMessage(), [
                'room_id' => $roomId,
                'user_id' => auth()->id()
            ]);
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'Failed to load room data',
                'position' => 'top-end',
                'duration' => 5000
            ]);
            $this->closeModal();
        }
    }

    public function saveRoom()
    {
        $action = $this->isEdit ? 'update' : 'create';
        if (!$this->authorizeAction($action)) {
            return;
        }

        $validated = $this->validate([
            'selected_site_id' => 'required|exists:sites,id',
            'name' => 'required|string|max:255',
            'description' => 'nullable|string',
            'area_square_meters' => 'required|numeric|min:0',
            'price_per_sqm' => 'required|numeric|min:0',
            'room_status' => 'required|in:0,1',
            'status' => 'required|in:0,1,2',
        ]);

        $validated['site_id'] = $this->selected_site_id;

        try {
            DB::beginTransaction();

            if ($this->isEdit) {
                $room = Room::findOrFail($this->roomId);
                $room->update($validated);
                $this->notifyCeo('updated', $room);

                // Check if price changed
                $currentPrice = $room->currentPriceModel;
                if (!$currentPrice || (float)$currentPrice->price_per_sqm != (float)$this->price_per_sqm) {

                    // Expire old price if exists
                    if ($currentPrice) {
                        $currentPrice->update([
                            'effective_to' => now()->subDay()->toDateString()
                        ]);
                    }

                    // Create new price record
                    RoomPrice::create([
                        'room_id' => $room->id,
                        'price_per_sqm' => $this->price_per_sqm,
                        'total_price' => $this->price_per_sqm * $room->area_square_meters,
                        'effective_from' => now()->toDateString()
                    ]);
                }
            } else {
                $room = Room::create($validated);
                $this->notifyCeo('created', $room);

                // Create initial price record
                RoomPrice::create([
                    'room_id' => $room->id,
                    'price_per_sqm' => $this->price_per_sqm,
                    'total_price' => $this->price_per_sqm * $room->area_square_meters,
                    'effective_from' => now()->toDateString()
                ]);
            }

            DB::commit();

            $this->dispatch('refreshRooms');
            $this->closeModal();
            $this->dispatch('showToast', [
                'type' => 'success',
                'message' => 'Room saved successfully'
            ]);
        } catch (\Illuminate\Database\Eloquent\ModelNotFoundException $e) {
            DB::rollBack();
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'Room not found',
                'position' => 'top-end',
                'duration' => 5000
            ]);
        } catch (\Exception $e) {
            DB::rollBack();
            Log::error('Room save failed: ' . $e->getMessage(), [
                'exception' => $e,
                'room_id' => $this->roomId ?? null,
                'user_id' => auth()->id()
            ]);

            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'Failed to save room. Please try again.',
                'position' => 'top-end',
                'duration' => 5000
            ]);
        }
    }

    public function getSitesProperty()
    {
        return Site::orderBy('name')->get(['id', 'name']);
    }

    public function getTotalPriceProperty()
    {
        return $this->area_square_meters * $this->price_per_sqm;
    }

    public function render()
    {
        return view('livewire.room.room-modal', [
            'totalPrice' => $this->totalPrice
        ]);
    }

    public static function modalMaxWidth(): string
    {
        return '2xl';
    }

    protected function notifyCeo($action, Room $room)
    {
        try {
            $ceoUsers = User::role(['ceo', 'super admin'])->get();

            $data = [
                'room_name' => $room->name,
                'site_name' => $room->site->name,
                'area_sqm' => $room->area_square_meters,
                'status' => $room->status ? 'Active' : 'Inactive',
            ];

            foreach ($ceoUsers as $ceo) {
                $ceo->notify(new NotifyCeo(
                    $action,
                    'Room',
                    $data
                ));
            }
        } catch (\Exception $e) {
            Log::error('Failed to send CEO notification: ' . $e->getMessage(), [
                'room_id' => $room->id,
                'action' => $action
            ]);
        }
    }
}


and inside rooms.blade
<div class="max-w-7xl mx-auto space-y-6">
    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <!-- Total Sites Card -->
        <div
            class="bg-gradient-to-br from-blue-600 to-blue-800 rounded-xl shadow-lg overflow-hidden text-white transform transition-all hover:scale-[1.02] duration-300">
            <div class="p-5 flex items-center justify-between">
                <div>
                    <div class="text-sm font-medium opacity-80">Total Sites</div>
                    <div class="text-3xl font-bold mt-1">{{ $stats['totalSites'] }}</div>
                    <div class="text-xs opacity-80 mt-2 flex items-center">
                        <i class="fas fa-building mr-1"></i> All locations
                    </div>
                </div>
                <div class="bg-white/20 p-4 rounded-full backdrop-blur-sm">
                    <i class="fas fa-city text-2xl"></i>
                </div>
            </div>
            <div class="bg-black/10 px-5 py-2 text-xs">
                <i class="fas fa-sync-alt mr-1"></i> Updated just now
            </div>
        </div>

        <!-- Total Rooms Card -->
        <div
            class="bg-gradient-to-br from-indigo-600 to-indigo-800 rounded-xl shadow-lg overflow-hidden text-white transform transition-all hover:scale-[1.02] duration-300">
            <div class="p-5 flex items-center justify-between">
                <div>
                    <div class="text-sm font-medium opacity-80">Total Rooms</div>
                    <div class="text-3xl font-bold mt-1">{{ $stats['totalRooms'] }}</div>
                    <div class="text-xs opacity-80 mt-2 flex items-center">
                        <i class="fas fa-door-open mr-1"></i> All spaces
                    </div>
                </div>
                <div class="bg-white/20 p-4 rounded-full backdrop-blur-sm">
                    <i class="fas fa-door-closed text-2xl"></i>
                </div>
            </div>
            <div class="bg-black/10 px-5 py-2 text-xs">
                <i class="fas fa-sync-alt mr-1"></i> Updated just now
            </div>
        </div>

        <!-- Available Rooms Card -->
        <div
            class="bg-gradient-to-br from-green-600 to-green-800 rounded-xl shadow-lg overflow-hidden text-white transform transition-all hover:scale-[1.02] duration-300">
            <div class="p-5 flex items-center justify-between">
                <div>
                    <div class="text-sm font-medium opacity-80">Available</div>
                    <div class="text-3xl font-bold mt-1">{{ $stats['availableRooms'] }}</div>
                    <div class="text-xs opacity-80 mt-2 flex items-center">
                        <span class="w-2 h-2 bg-green-300 rounded-full mr-1 animate-pulse"></span>
                        {{ $stats['totalRooms'] > 0 ? number_format(($stats['availableRooms'] / $stats['totalRooms']) * 100, 1) : 0 }}%
                        of total
                    </div>
                </div>
                <div class="bg-white/20 p-4 rounded-full backdrop-blur-sm">
                    <i class="fas fa-unlock text-2xl"></i>
                </div>
            </div>
            <div class="bg-black/10 px-5 py-2 text-xs">
                <i class="fas fa-clock mr-1"></i> Ready to book
            </div>
        </div>

        <!-- Occupied Rooms Card -->
        <div
            class="bg-gradient-to-br from-red-600 to-red-800 rounded-xl shadow-lg overflow-hidden text-white transform transition-all hover:scale-[1.02] duration-300">
            <div class="p-5 flex items-center justify-between">
                <div>
                    <div class="text-sm font-medium opacity-80">Occupied</div>
                    <div class="text-3xl font-bold mt-1">{{ $stats['occupiedRooms'] }}</div>
                    <div class="text-xs opacity-80 mt-2 flex items-center">
                        <span class="w-2 h-2 bg-red-300 rounded-full mr-1 animate-pulse"></span>
                        {{ $stats['totalRooms'] > 0 ? number_format(($stats['occupiedRooms'] / $stats['totalRooms']) * 100, 1) : 0 }}%
                        of total
                    </div>
                </div>
                <div class="bg-white/20 p-4 rounded-full backdrop-blur-sm">
                    <i class="fas fa-lock text-2xl"></i>
                </div>
            </div>
            <div class="bg-black/10 px-5 py-2 text-xs">
                <i class="fas fa-clock mr-1"></i> Currently in use
            </div>
        </div>
    </div>

    <!-- Main Room Management Card -->
    <div
        class="bg-white rounded-xl overflow-hidden shadow-2xl border border-gray-200 transform transition-all duration-300 hover:shadow-xl">
        <!-- Header with Gradient Background -->
        <div class="px-6 py-4 bg-gradient-to-r from-purple-800 to-indigo-900 text-white">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center space-y-4 md:space-y-0">
                <div class="flex items-center space-x-4">
                    <div class="bg-white/20 p-3 rounded-full backdrop-blur-sm shadow-lg">
                        <i class="fas fa-door-open text-2xl text-white"></i>
                    </div>
                    <div>
                        <h3 class="text-2xl font-bold tracking-wide">@lang('Room Management')</h3>
                        <p class="text-sm text-purple-100">@lang('Manage all rooms across your sites')</p>
                    </div>
                </div>
                @if (app(\App\Policies\SystemSettingsPolicy::class)->manageSystemSettings('create')->allowed())
                <button wire:click="openAddModal"
                        class="px-5 py-2.5 bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white rounded-lg shadow-md transition-all duration-300 flex items-center transform hover:scale-105"
                        wire:loading.attr="disabled" wire:target="openAddModal">

                        <span wire:loading.remove wire:target="openAddModal">
                            <i class="fas fa-plus-circle mr-2"></i> @lang('Add New Room')
                        </span>

                        <span wire:loading wire:target="openAddModal">
                            <i class="fas fa-spinner fa-spin mr-2"></i> @lang('Opening...')
                        </span>
                    </button>
                @endif

            </div>
        </div>

        <!-- Filters and Search Bar -->
        <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <!-- Site Filter -->

                <!-- Site Filter -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">@lang('Filter by Site')</label>
                    <select wire:model.live="siteFilter"
                        class="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition-all">
                        <option value="">@lang('All Sites')</option>
                        @foreach ($sites as $site)
                            <option value="{{ $site->id }}">{{ $site->name }}</option>
                        @endforeach
                    </select>
                </div>

                <!-- Status Filter -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">@lang('Filter by Status')</label>
                    <select wire:model.live="statusFilter"
                        class="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition-all">
                        <option value="">@lang('All Statuses')</option>
                        <option value="0">@lang('Available')</option>
                        <option value="1">@lang('Occupied')</option>
                    </select>
                </div>

                <!-- Search Box -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">@lang('Search Rooms')</label>
                    <div class="relative">
                        <input type="text" wire:model.live.debounce.300ms="searchTerm"
                            placeholder="@lang('Search by room name...')"
                            class="w-full border border-gray-300 rounded-lg pl-10 pr-4 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 shadow-sm transition-all">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-search text-gray-400"></i>
                        </div>
                    </div>
                </div>



            </div>
        </div>
        <!-- Add this right before the table -->

        <!-- Body -->
        <div class="p-6 bg-gradient-to-br from-gray-50 to-indigo-50">
            @if ($rooms->isEmpty())
                <!-- Empty State with Animation -->
                <div
                    class="text-center py-16 text-gray-600 bg-white border-2 border-dashed border-indigo-400 rounded-lg shadow-inner transform transition-all hover:scale-[1.01] duration-300">
                    <div class="animate-bounce mb-4">
                        <i class="fas fa-door-closed text-5xl text-indigo-500"></i>
                    </div>
                    <h4 class="text-xl font-semibold mb-2">@lang('NO ROOMS FOUND')</h4>
                    <p class="text-gray-500 mb-4">@lang('Try adjusting your filters or add your first room')</p>
                    <button wire:click="resetFilters"
                        class="px-4 py-2 bg-indigo-100 text-indigo-700 rounded-lg hover:bg-indigo-200 transition flex items-center mx-auto">
                        <i class="fas fa-sync-alt mr-2"></i> @lang('Reset Filters')
                    </button>
                </div>
            @else
                <!-- Rooms Table -->
                <div class="overflow-x-auto rounded-xl shadow-lg border border-gray-200 bg-white">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gradient-to-r from-gray-100 to-gray-200">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider cursor-pointer"
                                    wire:click="sortBy('name')">
                                    <div class="flex items-center">
                                        @lang('Room Name')
                                        <i class="fas fa-sort ml-1 text-gray-400"></i>
                                    </div>
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider cursor-pointer"
                                    wire:click="sortBy('sites.name')">
                                    <div class="flex items-center">
                                        @lang('Site')
                                        <i class="fas fa-sort ml-1 text-gray-400"></i>
                                    </div>
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider cursor-pointer"
                                    wire:click="sortBy('area_square_meters')">
                                    <div class="flex items-center">
                                        @lang('Area')
                                        <i class="fas fa-sort ml-1 text-gray-400"></i>
                                    </div>
                                </th>


                                <th
                                    class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider">
                                    @lang('Status')
                                </th>
                                <th
                                    class="px-6 py-3 text-right text-xs font-semibold text-gray-700 uppercase tracking-wider">
                                    @lang('Actions')
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach ($rooms as $room)
                                <tr class="hover:bg-indigo-50 transition-colors duration-150">
                                    <!-- Room Name -->
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div
                                                class="flex-shrink-0 h-10 w-10 bg-indigo-100 rounded-full flex items-center justify-center mr-3">
                                                <i class="fas fa-door-open text-indigo-600"></i>
                                            </div>
                                            <div>
                                                <div class="font-medium text-gray-900">{{ $room->name }}</div>
                                            </div>
                                        </div>
                                    </td>

                                    <!-- Site -->
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div
                                                class="flex-shrink-0 h-9 w-9 bg-purple-100 rounded-full flex items-center justify-center mr-3">
                                                <i class="fas fa-building text-purple-600 text-sm"></i>
                                            </div>
                                            <div class="text-sm font-medium text-gray-900">
                                                {{ $room->site->name ?? 'N/A' }}
                                            </div>
                                        </div>
                                    </td>

                                    <!-- Area -->
                                    <!-- Area -->
                                    <!-- Area -->
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900 flex items-center">
                                            <span class="font-mono bg-indigo-50 px-2 py-1 rounded mr-2">
                                                {{ $room->area_square_meters }} m²
                                                <span class="text-indigo-600">
                                                    ({{ $room->formatted_price }})
                                                </span>

                                            </span>

                                        </div>
                                    </td>

                                    <!-- Status -->
                                    <!-- Status -->
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        @if ($room->rentAgreements->where('end_date', '>=', now()->toDateString())->count())
                                            <span
                                                class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800 border border-red-200 animate-pulse">
                                                <i class="fas fa-lock mr-1"></i> Occupied
                                            </span>
                                        @else
                                            <span
                                                class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800 border border-green-200">
                                                <i class="fas fa-unlock mr-1"></i> Available
                                            </span>
                                        @endif
                                    </td>

                                    <!-- Actions -->
                                    @can('manageSystemSettings', 'create')
                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex justify-end space-x-2">
                                                <!-- Edit Button -->
                                                <button wire:click="openEditModal({{ $room->id }})"
                                                    class="text-indigo-600 hover:text-indigo-900 bg-indigo-50 hover:bg-indigo-100 p-2 rounded-full transition-all duration-300 transform hover:scale-110"
                                                    title="@lang('Edit Room')" wire:loading.attr="disabled"
                                                    wire:target="openEditModal({{ $room->id }})">

                                                    <span wire:loading.remove
                                                        wire:target="openEditModal({{ $room->id }})">
                                                        <i class="fas fa-edit"></i>
                                                    </span>

                                                    <span wire:loading wire:target="openEditModal({{ $room->id }})">
                                                        <i class="fas fa-spinner fa-spin"></i>
                                                    </span>
                                                </button>

                                                <!-- Delete Button -->
                                                <button wire:click="deleteRoom({{ $room->id }})"
                                                    onclick="return confirm('Are you sure you want to delete this room?')"
                                                    class="text-red-600 hover:text-red-900 bg-red-50 hover:bg-red-100 p-2 rounded-full transition-all duration-300 transform hover:scale-110"
                                                    title="@lang('Delete Room')" wire:loading.attr="disabled"
                                                    wire:target="deleteRoom({{ $room->id }})">

                                                    <span wire:loading.remove
                                                        wire:target="deleteRoom({{ $room->id }})">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </span>

                                                    <span wire:loading wire:target="deleteRoom({{ $room->id }})">
                                                        <i class="fas fa-spinner fa-spin"></i>
                                                    </span>
                                                </button>
                                            </div>
                                        </td>
                                    @endcan

                                </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if ($rooms->hasPages())
                    <div class="mt-4 px-4 py-3 bg-white border-t border-gray-200 rounded-b-lg">
                        {{ $rooms->links() }}
                    </div>
                @endif
            @endif
        </div>
    </div>
</div>
