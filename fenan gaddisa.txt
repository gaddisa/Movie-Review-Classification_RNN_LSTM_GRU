<?php
namespace App\Livewire\Institutions;

use LivewireUI\Modal\ModalComponent;
use App\Models\Institute;
use Illuminate\Support\Facades\Auth;
use RealRashid\SweetAlert\Facades\Alert;

class InstituteModal extends ModalComponent
{
    public $instituteId;
    public $isEdit = false;

    // Form fields
    public $name;
    public $status = 'Active';

    protected function rules()
    {
        return [
            'name' => 'required|string|max:255|unique:institutes,name' . ($this->isEdit ? ',' . $this->instituteId : ''),
            'status' => 'required|in:Active,Inactive',
        ];
    }

    public function mount($instituteId = null)
    {
        if ($instituteId) {
            $this->isEdit = true;
            $this->loadInstitute($instituteId);
        }
    }

    public function loadInstitute($instituteId)
    {
        try {
            $institute = Institute::findOrFail($instituteId);
            $this->instituteId = $instituteId;
            $this->name = $institute->name;
            $this->status = $institute->status;
        } catch (\Exception $e) {
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'Failed to load institute data',
                'position' => 'top-end',
                'duration' => 5000
            ]);
            $this->closeModal();
        }
    }

    public function saveInstitute()
    {
        $this->validate();

        try {
            $data = [
                'name' => $this->name,
                'status' => $this->status,
                'created_by' => Auth::id(),
            ];

            if ($this->isEdit) {
                $institute = Institute::findOrFail($this->instituteId);
                $institute->update($data);
                $message = 'Institute updated successfully!';
            } else {
                Institute::create($data);
                $message = 'Institute created successfully!';
            }

            $this->dispatch('refreshInstitutes');
            $this->closeModal();
            
            $this->dispatch('showToast', [
                'type' => 'success',
                'message' => $message,
                'position' => 'top-end',
                'duration' => 5000
            ]);
        } catch (\Exception $e) {
            $this->dispatch('showToast', [
                'type' => 'error',
                'message' => 'Failed to save institute: ' . $e->getMessage(),
                'position' => 'top-end',
                'duration' => 5000
            ]);
        }
    }

    public function render()
    {
        return view('livewire.institutions.institute-modal');
    }

    public static function modalMaxWidth(): string
    {
        return '2xl';
    }
}

