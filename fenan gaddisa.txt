<?php

namespace App\Http\Controllers\Backend;

use Illuminate\Support\Facades\Auth;
use App\Http\Controllers\Controller;
use Modules\Application\Models\Application;
use Modules\Certificate\Models\Certificate;

class BackendController extends Controller
{
    public function index()
    {
        $user = Auth::user();

        if ($user->hasRole('user')) {
            $application = Application::where('created_by', $user->id)
                ->latest()
                ->first();

            if ($application) {
                return redirect()->route('backend.applications.profileview', ['id' => $application->id]);
            }
            return redirect()->route('backend.applications.index');
        }

        $stats = $this->getDashboardStatistics();
        $chartData = $this->getChartData();
        $recentActivities = $this->getRecentActivities();
        $topInstitutions = $this->getTopInstitutions();
        $accreditationStatus = $this->getAccreditationStatus();

        $viewData = [
            'stats' => $stats,
            'chartData' => $chartData,
            'recentActivities' => $recentActivities,
            'topInstitutions' => $topInstitutions,
            'accreditationStatus' => $accreditationStatus,
            'getActivityColor' => function($type) {
                switch ($type) {
                    case 'Full Accreditation Granted': return 'success';
                    case 'Provisional Accreditation Granted': return 'warning';
                    case 'Application Rejected': return 'danger';
                    default: return 'info';
                }
            },
            'getActivityIcon' => function($type) {
                switch ($type) {
                    case 'Full Accreditation Granted': return 'certificate';
                    case 'Provisional Accreditation Granted': return 'certificate';
                    case 'Application Rejected': return 'times-circle';
                    default: return 'clipboard-check';
                }
            },
            'getRankColor' => function($index) {
                switch ($index) {
                    case 0: return 'primary';
                    case 1: return 'secondary';
                    case 2: return 'warning';
                    default: return 'light';
                }
            }
        ];

        return view('backend.dashboard', $viewData);
    }

    protected function getDashboardStatistics()
    {
        // Exclude profile_draft applications from all statistics
        $totalApplications = Application::where('status', '!=', 'profile_draft')->count();
        $certifiedApplications = Certificate::count();
        
        return [
            'total_applications' => $totalApplications,
            'certified_applications' => $certifiedApplications,
            'pending_applications' => $totalApplications - $certifiedApplications,
            'full_accreditations' => Certificate::where('accreditation_status', 'Full Accreditation')->count(),
            'provisional_accreditations' => Certificate::where('accreditation_status', 'Provisional Accreditation')->count(),
            'institutions_count' => Certificate::distinct('institute_id')->count(),
            'programs_count' => Certificate::distinct('program_name')->count(),
        ];
    }

    protected function getChartData()
    {
        // Applications status breakdown - exclude profile_draft
        $applicationsByStatus = [
            'Fully Accredited' => Certificate::where('accreditation_status', 'Full Accreditation')->count(),
            'Provisionally Accredited' => Certificate::where('accreditation_status', 'Provisional Accreditation')->count(),
            'Pending Review' => Application::where('status', '!=', 'profile_draft')
                ->doesntHave('certificate')
                ->count(),
            'Rejected' => Application::where('status', 'accreditation_rejected')
                ->where('status', '!=', 'profile_draft')
                ->count(),
        ];

        // Accreditation by program type (top 6)
        $accreditationByProgram = Certificate::select('program_name')
            ->selectRaw('COUNT(*) as count')
            ->groupBy('program_name')
            ->orderByDesc('count')
            ->limit(6)
            ->get()
            ->pluck('count', 'program_name')
            ->toArray();

        // Accreditation timeline (last 12 months)
        $accreditationTimeline = [];
        for ($i = 11; $i >= 0; $i--) {
            $date = now()->subMonths($i);
            $monthYear = $date->format('M Y');
            
            $accreditationTimeline[$monthYear] = [
                'Full' => Certificate::where('accreditation_status', 'Full Accreditation')
                    ->whereYear('issued_date', $date->year)
                    ->whereMonth('issued_date', $date->month)
                    ->count(),
                'Provisional' => Certificate::where('accreditation_status', 'Provisional Accreditation')
                    ->whereYear('issued_date', $date->year)
                    ->whereMonth('issued_date', $date->month)
                    ->count(),
            ];
        }
        
        // Ownership status - exclude profile_draft
        $ownershipStatus = [
            'Public' => [
                'Fully Accredited' => Certificate::where('accreditation_status', 'Full Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_ownership', 'Public')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Provisionally Accredited' => Certificate::where('accreditation_status', 'Provisional Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_ownership', 'Public')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Pending' => Application::where('status', '!=', 'profile_draft')
                    ->doesntHave('certificate')
                    ->where('institute_ownership', 'Public')
                    ->count(),
                'Rejected' => Application::where('status', 'accreditation_rejected')
                    ->where('institute_ownership', 'Public')
                    ->count(),
            ],
            'Private' => [
                'Fully Accredited' => Certificate::where('accreditation_status', 'Full Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_ownership', 'Private')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Provisionally Accredited' => Certificate::where('accreditation_status', 'Provisional Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_ownership', 'Private')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Pending' => Application::where('status', '!=', 'profile_draft')
                    ->doesntHave('certificate')
                    ->where('institute_ownership', 'Private')
                    ->count(),
                'Rejected' => Application::where('status', 'accreditation_rejected')
                    ->where('institute_ownership', 'Private')
                    ->count(),
            ]
        ];

        // Institute type status - exclude profile_draft
        $instituteTypeStatus = [
            'TVET' => [
                'Fully Accredited' => Certificate::where('accreditation_status', 'Full Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_type', 'TVET')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Provisionally Accredited' => Certificate::where('accreditation_status', 'Provisional Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_type', 'TVET')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Pending' => Application::where('status', '!=', 'profile_draft')
                    ->doesntHave('certificate')
                    ->where('institute_type', 'TVET')
                    ->count(),
                'Rejected' => Application::where('status', 'accreditation_rejected')
                    ->where('institute_type', 'TVET')
                    ->count(),
            ],
            'HEI' => [
                'Fully Accredited' => Certificate::where('accreditation_status', 'Full Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_type', 'HEI')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Provisionally Accredited' => Certificate::where('accreditation_status', 'Provisional Accreditation')
                    ->whereHas('application', fn($q) => $q->where('institute_type', 'HEI')
                        ->where('status', '!=', 'profile_draft'))
                    ->count(),
                'Pending' => Application::where('status', '!=', 'profile_draft')
                    ->doesntHave('certificate')
                    ->where('institute_type', 'HEI')
                    ->count(),
                'Rejected' => Application::where('status', 'accreditation_rejected')
                    ->where('institute_type', 'HEI')
                    ->count(),
            ]
        ];

        return [
            'applications_by_status' => $applicationsByStatus,
            'accreditation_by_program' => $accreditationByProgram,
            'accreditation_timeline' => $accreditationTimeline,
            'ownership_status' => $ownershipStatus,
            'institute_type_status' => $instituteTypeStatus
        ];
    }

    protected function getRecentActivities()
    {
        // Exclude profile_draft applications from recent activities
        return Application::with(['institute', 'program'])
            ->where('status', '!=', 'profile_draft')
            ->orderBy('updated_at', 'desc')
            ->limit(5)
            ->get()
            ->map(function ($app) {
                return [
                    'type' => $this->getActivityType($app),
                    'institute' => $app->institute->name ?? 'N/A',
                    'program' => $app->program->name ?? 'N/A',
                    'time' => $app->updated_at->diffForHumans(),
                    'status' => $app->status,
                ];
            });
    }

    protected function getTopInstitutions()
    {
        // Only include certificates from non-profile_draft applications
        return Certificate::whereHas('application', function($query) {
                $query->where('status', '!=', 'profile_draft');
            })
            ->select('institute_name')
            ->selectRaw('COUNT(*) as program_count')
            ->selectRaw('SUM(CASE WHEN accreditation_status = "Full Accreditation" THEN 1 ELSE 0 END) as full_count')
            ->groupBy('institute_name')
            ->orderByDesc('program_count')
            ->limit(5)
            ->get()
            ->map(function ($cert) {
                return [
                    'name' => $cert->institute_name,
                    'program_count' => $cert->program_count,
                    'full_count' => $cert->full_count,
                    'provisional_count' => $cert->program_count - $cert->full_count,
                ];
            });
    }

    protected function getAccreditationStatus()
    {
        // Only include certificates from non-profile_draft applications
        return [
            'expiring_soon' => Certificate::whereHas('application', function($query) {
                    $query->where('status', '!=', 'profile_draft');
                })
                ->where('valid_until', '<=', now()->addMonths(3))
                ->where('valid_until', '>=', now())
                ->orderBy('valid_until')
                ->limit(5)
                ->get(),
            'recently_accredited' => Certificate::whereHas('application', function($query) {
                    $query->where('status', '!=', 'profile_draft');
                })
                ->orderBy('issued_date', 'desc')
                ->limit(5)
                ->get(),
        ];
    }

    protected function getActivityType($application)
    {
        if ($application->certificate) {
            return $application->certificate->accreditation_status === 'Full Accreditation' 
                ? 'Full Accreditation Granted' 
                : 'Provisional Accreditation Granted';
        }
        
        if ($application->status === 'accreditation_rejected') {
            return 'Application Rejected';
        }
        
        return 'Application Under Review';
    }
}
